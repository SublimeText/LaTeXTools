/*
LaTeX Package keymap for Linux
*/
[
	// these also override ST3 commands, but we simply run the same commands
	// it is necessary so on ST2 we can implement our build selector
	{	"keys": ["ctrl+b"],
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "latextools.st_version", "operator": "equal", "operand": "<3080"}],
		"command": "latextools_build_selector"},
	{	"keys": ["ctrl+shift+b"],
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "latextools.st_version", "operator": "equal", "operand": "<3080"}],
		"command": "latextools_build_selector",
			"args": {"select": true}},

	// New-style keybindings use "ctrl+l" as a prefix
	// This overrides "extend selection to line", which is remapped to
	// "ctrl+l","ctrl+l" [?]
	// However, keybindings are scoped to the text.tex.latex selector, so they do not
	// pollute the standard bindings

	// Reassign expand_selection to ctrl+l, ctrl+l
	{ 	"keys": ["ctrl+l","ctrl+l"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "expand_selection", "args": {"to": "line"} },

	// Avoid weird brace-matching behavior with indented text
	{ "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"}, "context":
		[
			{ "key": "indented_block", "match_all": true },
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
		]
	},

	// Insert latex command or environment, and close current environment
	{ 	"keys": ["ctrl+l","c"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latexcmd"},
	{ 	"keys": ["ctrl+l","e"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latexenv"},
	{ 	"keys": ["ctrl+l","."], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_env_closer"},

	// Bindings for completions
	// ctrl+l,alt+/ suggests ST2's standard autocompletion keybinding, but for LaTeX;
	// ctrl+l,x suggests "cross" references, which both cites and refs are
	// TODO: remove ctrl+l,ctrl+space
	{ 	"keys": ["ctrl+l","alt+/"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_fill_all"},
	{ 	"keys": ["ctrl+l","x"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_fill_all", "args": {"completion_type": ["cite", "ref"]}},

	// Fill helper command
	{	"keys": ["ctrl+l","ctrl+f"], 
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_fill_all"},
	{	"keys": ["ctrl+l","ctrl+alt+f"], 
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_fill_all", "args": {"overwrite": true}},
	{	"keys": ["ctrl+l","alt+x","c"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_fill_all", "args": {"completion_type": "cite", "force": true}},
	{	"keys": ["ctrl+l","alt+x","r"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_fill_all", "args": {"completion_type": "ref", "force": true}},

	{	"keys": ["{"],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_ref.open_curly", "operator": "equal", "match_all": true, "operand": true}],
		"command": "latex_fill_all", "args": {"completion_type": "ref", "insert_char": "{"}},

	{	"keys": ["{"],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_cite.open_curly", "operator": "equal", "match_all": true, "operand": true}],
		"command": "latex_fill_all", "args": {"completion_type": "cite", "insert_char": "{"}},

	{	"keys": [","],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_cite.comma", "operator": "equal", "match_all": true, "operand": true}],
		"command": "latex_fill_all", "args": {"completion_type": "cite", "insert_char": ","}},
	
	{	"keys": [","],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_ref.comma", "operator": "equal", "match_all": true, "operand": true}],
		"command": "latex_fill_all", "args": {"completion_type": "ref", "insert_char": ","}},

	{	"keys": ["["],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_cite.open_square", "operator": "equal", "match_all": true, "operand": true}],
		"command": "latex_fill_all", "args": {"completion_type": "cite", "insert_char": "["}},

	{	"keys": ["{"],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_input.open_curly", "operator": "equal", "operand": true, "match_all": true}],
		"command": "latex_fill_all", "args": {"completion_type": "input", "insert_char": "{"}},

	{	"keys": [","],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_input.comma", "operator": "equal", "operand": true, "match_all": true}],
		"command": "latex_fill_all", "args": {"completion_type": "input", "insert_char": ","}},

	{	"keys": ["{"],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_env.open_curly", "operator": "equal", "operand": true, "match_all": true}],
		"command": "latex_fill_all", "args": {"completion_type": "env", "insert_char": "{"}},

	{	"keys": ["{"],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - comment"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_glossary.open_curly", "operator": "equal", "operand": true, "match_all": true}],
		"command": "latex_fill_all", "args": {"completion_type": "glossary", "insert_char": "{"}},

	{	"keys": ["="],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex comment.line.percentage"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "lt_fill_all_directive.equal_sign", "operator": "equal", "match_all": true, "operand": true}],
		"command": "latex_fill_all", "args": {"completion_type": "directive", "insert_char": "="}},

	// Toggle autocomplete
	{ 	"keys": ["ctrl+l","t","a", "r"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "ref"}},
	{ 	"keys": ["ctrl+l","t","a", "c"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "cite"}},
	{ 	"keys": ["ctrl+l","t","a", "f"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "fill"}},
	{ 	"keys": ["ctrl+l","t","a", "e"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "env"}},
	{ 	"keys": ["ctrl+l","t","a", "d"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "tex_directive"}},
	{ 	"keys": ["ctrl+l","t","a", "b"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "smart_bracket"}},

	// View PDF, jump to point, toggle editor/viewer focus and syncing behavior
	{ 	"keys": ["ctrl+l","v"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "view_pdf"},
	{ 	"keys": ["ctrl+l","j"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "jump_to_pdf", "args": {"from_keybinding": true}},
	{ 	"keys": ["ctrl+l","t","f"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_focus"},
	{ 	"keys": ["ctrl+l","t","s"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_fwdsync"},
	{ 	"keys": ["ctrl+l","t","v"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_view_on_build"},
	{ 	"keys": ["ctrl+l","t","?"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_show"},

	// Jump to a tex file (will create the file if it does not exists)
	{ "keys": ["ctrl+l", "ctrl+o"],
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "jumpto_tex_file", "args": {"auto_create_missing_folders": true, "auto_insert_root": true}},
	// Jump to anywhere
	// This will select the executed jump according to the context,
	// e.g. if the cursor is inside a ref command it will jump to the corresponding label
	{ "keys": ["ctrl+l", "ctrl+j"],
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "jumpto_tex_anywhere"},

	// Wrap selected text in command or environment
	{ "keys": ["ctrl+l","ctrl+c"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Wrap in command.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+n"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Wrap in environment.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+n"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Insert environment.sublime-snippet"}},
	// Change the surrounding environment
	{ "keys": ["ctrl+l", "ctrl+shift+n"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_change_environment"},
	// Toggle the starred version of environment
	{ "keys": ["ctrl+l", "ctrl+shift+8"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_toggle_environment_star"},

	// Wrap selected text in emph, bold or underline
	{ "keys": ["ctrl+l","ctrl+e"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text emphasize.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+b"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text boldface.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+u"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text underline.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+t"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text monospace.sublime-snippet"}},

	// Replace the `C-r` overlay and the `C-shift-r` overlay with a 
	// whole document overlay as opt-out
	// Also add these overlays to `C-l, C-r` and `C-l, C-shift-r`
	{ "keys": ["ctrl+r"], "command": "latex_toc_quickpanel",
		"args": {"only_current_file": true},
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex"},
			{"key": "overwrite_goto_overlay"}]
	},
	{ "keys": ["ctrl+shift+r"], "command": "latex_toc_quickpanel",
		"args": {"only_current_file": false},
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex"},
			{"key": "overwrite_goto_overlay"}]
	},
	{ "keys": ["ctrl+l","ctrl+r"],
		"args": {"only_current_file": true},
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex"}],
		"command": "latex_toc_quickpanel"},
	{ "keys": ["ctrl+l","ctrl+shift+r"], "command": "latex_toc_quickpanel",
		"args": {"only_current_file": false},
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex"}],
		"command": "latex_toc_quickpanel"},

	// Show panel
	{ "keys": ["shift+escape"],
		"context": [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "panel_visible", "operator": "equal", "operand": false }],
		"command": "show_panel", "args": {"panel": "output.latextools"}},

		// Auto-pair ``$''
		// Lifted from default file
	// insert matching $
	// note the "key": "selector" line!
	{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$$0\\$"}, 
	"context":  
		[
			{ "key": "setting.command_mode", "operator": "equal", "operand": false },
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex" },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			// do not insert this if it is escaped
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\\\\\\\)*(?:\\\\|\\$)$", "match_all": true },
			// don't insert, it inside math environments
			{ "key": "selector", "operator": "not_equal", "operand": "meta.environment.math, string.other.math", "match_all": true },
			// don't insert, if there is an open dollar math environment at the end of the line
			{ "key": "eol_selector", "operator": "not_equal", 
			  "operand": "meta.environment.math.inline.dollar - punctuation.definition.string.end, string.other.math - punctuation.definition.string.end",
			  "match_all": true }
		] 
	},
	// fully close $$ environments
	{ "keys": ["$"], "command": "insert", "args": {"characters": "$$"}, 
	"context":
		[
			{ "key": "setting.command_mode", "operator": "equal", "operand": false },
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex meta.environment.math.block.dollar" },
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			// do not insert this if it is escaped
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "(?:\\\\\\\\)*(?:\\\\|\\$)$", "match_all": true }
		]
	},
	// wrap in $
	{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$${0:$SELECTION}\\$"}, "context":
		[
			{ "key": "setting.command_mode", "operator": "equal", "operand": false },
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	// move over closing $
	{ "keys": ["$"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[	
			{ "key": "setting.command_mode", "operator": "equal", "operand": false },
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\$", "match_all": true }
		]
	},
	// delete $ pair
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\$$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\$", "match_all": true }
		]
	},

		// overlay specifications (Tobias Schmidt)
	// FIXME: the scope for the four following should actually be text.tex.latex.beamer, but for some reason this does not seem to work
	{ "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${1:+-}>$0"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex - (string.other.math, meta.environment.math)"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\\\(?:item|only|textbf|color|onslide|only|uncover|visible|invisible|alt|temporal)$", "match_all": true }
		]
	},
	// wrap in <>
	{ "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	// move over closing >
	{ "keys": [">"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[	
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
		]
	},
	// delete <> pair
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
		]
	},
	// autopair quotation marks (`')
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0'"}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}'"}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
		]
	},
	// automatic addition of new \items when hitting Shift+Enter in a list environment
	{ "keys": ["shift+enter"], "command": "insert_snippet", "args": {"contents": "\n\\item $0"},
	"context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex meta.environment.list, meta.function.environment.list.latex"},
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},
	// create a \item[] in a description environment
	{ "keys": ["shift+enter"], "command": "insert_snippet", "args": {"contents": "\n\\item[$1] $0"},
	"context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex meta.environment.list.description"},
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},


	// shift+super+{up,down} for super/subscripts with braces
	// (courtesy of Tobias Schmidt; I only changed the keybindings)
	{ "keys": ["shift+super+down"], "command": "insert_snippet", "args": {"contents": "_{$1}$0"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "ttext.tex.latex meta.environment.math"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},

	{ "keys": ["shift+super+up"], "command": "insert_snippet", "args": {"contents": "^{$1}$0"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex meta.environment.math"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},


	// ctrl+l,backspace to remove temporary files
	{ 	"keys": ["ctrl+l","backspace"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "delete_temp_files"},
	// Delete/clear local Cache
	{ 	"keys": ["ctrl+l","ctrl+d","ctrl+c"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "clear_local_latex_cache"},

	// ctrl+l,w to display word count
	{	"keys": ["ctrl+l", "w"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "texcount" }
]
