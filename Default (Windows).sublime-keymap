/*
LaTeX Package keymap for Windows
*/
[

	// New-style keybindings use "ctrl+l" as a prefix
	// This overrides "extend selection to line", which is remapped to
	// "ctrl+l","ctrl+l" [?]
	// However, keybindings are scoped to the text.tex.latex selector, so they do not
	// pollute the standard bindings

	// Reassign expand_selection to ctrl+l, ctrl+l
	{ 	"keys": ["ctrl+l","ctrl+l"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "expand_selection", "args": {"to": "line"} },

	// Insert latex command or environment, and close current environment
	{ 	"keys": ["ctrl+l","c"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latexcmd"},
	{ 	"keys": ["ctrl+l","e"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latexenv"},
	{ 	"keys": ["ctrl+l","."], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_env_closer"},

	// Complete reference or citation
	// ctrl+l,ctrl+space suggests ST2's standard autocompletion keybinding, but for LaTeX;
	// ctrl+l,x suggests "cross" references, which both cites and refs are 
	{ 	"keys": ["ctrl+l","ctrl+space"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_ref_cite"},
	{ 	"keys": ["ctrl+l","x"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "latex_ref_cite"},

	{	"keys": ["{"],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "preceding_text", "operator": "regex_contains",
				"operand": "\\\\(((eq|page|v|V|auto|name|c|C|cpage)?ref)|(cite([a-zX*]*?)(\\[.*?\\]){0,2}))$", "match_all": true}],
		"command": "latex_ref_cite", "args": {"insert_char": "{"}},

	{	"keys": [","],
		"context":  [
			{"key": "setting.disable_latex_ref_cite_auto_trigger", "operator": "not_equal", "operand": true},
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "selection_empty", "operator": "equal", "operand": true, "match_all": true},
			{"key": "preceding_text", "operator": "regex_contains",
				"operand": "\\\\cite([a-zX*]*?)(\\[.*?\\]){0,2}\\{(?:[^{},]*,)*[^{},]+$", "match_all": true}],
		"command": "latex_ref_cite", "args": {"insert_char": ","}},

	// Toggle autocomplete
	{ 	"keys": ["ctrl+l","t","a", "r"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "ref"}},
	{ 	"keys": ["ctrl+l","t","a", "c"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_auto", "args": {"which": "cite"}},

	// View PDF, jump to point, toggle editor/viewer focus
	{ 	"keys": ["ctrl+l","v"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "view_pdf"},
	{ 	"keys": ["ctrl+l","j"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "jump_to_pdf", "args": {"from_keybinding": true}},
	{ 	"keys": ["ctrl+l","t","f"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_focus"},
	{ 	"keys": ["ctrl+l","t","s"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_fwdsync"},
	{ 	"keys": ["ctrl+l","t","?"],
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "toggle_show"},

	// Wrap selected text in command or environment
	{ "keys": ["ctrl+l","ctrl+c"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Wrap in command.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+n"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Wrap in environment.sublime-snippet"}},

	// Wrap selected text in emph, bold or underline
	{ "keys": ["ctrl+l","ctrl+e"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text emphasize.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+b"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text boldface.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+u"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text underline.sublime-snippet"}},
	{ "keys": ["ctrl+l","ctrl+t"],  
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "insert_snippet", "args": {"name":"Packages/LaTeXTools/Text monospace.sublime-snippet"}},






		// Auto-pair ``$''
		// Lifted from default file
	// insert matching $
	// note the "key": "selector" line!
	{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$$0\\$"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			/*{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|])", "match_all": true },*/
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double", "match_all": true }
		] 
	},
	// wrap in $
	{ "keys": ["$"], "command": "insert_snippet", "args": {"contents": "\\$${0:$SELECTION}\\$"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	// move over closing $
	{ "keys": ["$"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[	
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\$", "match_all": true }
		]
	},
	// delete $ pair
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\$$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^\\$", "match_all": true }
		]
	},

		// overlay specifications (Tobias Schmidt)
	// FIXME: the scope for the four following should actually be text.tex.latex.beamer, but for some reason this does not seem to work
	{ "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${1:+-}>$0"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{"key": "selector", "operator": "not_equal", "operand": "string.other.math.tex"},
			{"key": "selector", "operator": "not_equal", "operand": "string.other.math.latex"},
			{"key": "selector", "operator": "not_equal", "operand": "string.other.math.block.tex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "\\item|only|textbf|color|onslide|only|uncover|visible|invisible|alt|temporal$", "match_all": true }
		]
	},
	// wrap in <>
	{ "keys": ["<"], "command": "insert_snippet", "args": {"contents": "<${0:$SELECTION}>"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	// move over closing >
	{ "keys": [">"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[	
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
		]
	},
	// delete <> pair
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "<$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^>", "match_all": true }
		]
	},
	// autopair quotation marks (`')
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0'"}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}'"}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["'"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true }
		]
	},
	// automatic addition of new \items when hitting Shift+Enter in a list environment
 	{ "keys": ["shift+enter"], "command": "insert_snippet", "args": {"contents": "\n\\item $0"}, 
 	"context":  
	 	[
			{"key": "selector", "operator": "equal", "operand": "meta.function.environment.list.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},


	// shift+super+{up,down} for super/subscripts with braces
	// (courtesy of Tobias Schmidt; I only changed the keybindings)
	{ "keys": ["shift+super+down"], "command": "insert_snippet", "args": {"contents": "_{$1}$0"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex string.other.math"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},

	{ "keys": ["shift+super+up"], "command": "insert_snippet", "args": {"contents": "^{$1}$0"}, 
	"context":  
		[
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex string.other.math"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
		]
	},


	// ctrl+l,backspace to remove temporary files
	{ 	"keys": ["ctrl+l","backspace"], 
		"context":  [
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"}],
		"command": "delete_temp_files"},


	// Avoid weird brace-matching behavior with indented text
	{ "keys": ["{"], "command": "insert_snippet", "args": {"contents": "{$0}"}, "context":
		[
			{ "key": "indented_block", "match_all": true },
			{"key": "selector", "operator": "equal", "operand": "text.tex.latex"},
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
		]
	}
]
